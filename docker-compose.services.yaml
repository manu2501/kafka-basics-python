version: '3.8'
name: burger_modular_stack

services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_KRAFT_MODE: 'true'
      CLUSTER_ID: 'nvsjkvl-Q6bW-4k8d-9b3f-2c3f4e5g6h7i'
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    volumes:
      - kafka_kraft:/var/lib/kafka/data

  user_service:
    build:
      context: .
      dockerfile: ./services/user_service/Dockerfile
    container_name: user_service
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
    ports:
      - "8001:8001"
    depends_on:
      - kafka

  admin_service:
    build:
      context: .
      dockerfile: ./services/admin_service/Dockerfile
    container_name: admin_service
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
    ports:
      - "8002:8002"
    depends_on:
      - kafka

  gateway:
    build:
      context: .
      dockerfile: ./services/gateway/Dockerfile
    container_name: gateway
    environment:
      USER_SERVICE_URL: http://user_service:8001
      ADMIN_SERVICE_URL: http://admin_service:8002
    ports:
      - "8080:8080"
    depends_on:
      - user_service
      - admin_service

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: web
    environment:
      NEXT_PUBLIC_API_BASE: http://gateway:8080
      JWT_SECRET: dev_secret_change_me
    ports:
      - "3000:3000"
    depends_on:
      - gateway

volumes:
  kafka_kraft:
